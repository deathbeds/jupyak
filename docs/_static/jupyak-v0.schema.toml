"$schema" = "http://json-schema.org/draft-07/schema#"
title = "Yak"
description = "A description of a jupyak pull request"

[properties.env]
"$ref" = "#/$defs/CondaEnv"
title = "env"
description = "the conda environment to manage during the build process"

[properties.lite]
"$ref" = "#/$defs/LiteOptions"
title = "lite"
description = "JupyterLite-specific configuration for contents, building, and running"

[properties.repos]
type = "object"
title = "repos"
description = "git-hosted projects to clone, build, and use to deploy a JupyterLite site"

[[properties.repos.additionalProperties.anyOf]]
"$ref" = "#/$defs/Repo"
type = "object"
title = "custom repo"

[[properties.repos.additionalProperties.anyOf]]
title = "comm"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "comm" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "comm"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/ipython/comm"

[properties.repos.additionalProperties.anyOf.default.lite]
wheel = true

[properties.repos.additionalProperties.anyOf.default.py]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "ipykernel"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "ipykernel" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "ipykernel"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/ipython/ipykernel"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "comm",
  "jupyter_client",
  "ipython",
  "jupyter_core",
  "traitlets",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "ipython"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "ipython" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "ipython"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/ipython/ipython"

[properties.repos.additionalProperties.anyOf.default.lite]
wheel = true

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "traitlets",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "ipywidgets"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "ipywidgets" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "ipywidgets"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter-widgets/ipywidgets"

[properties.repos.additionalProperties.anyOf.default.js]
dependencies = [
  "lumino",
  "jupyterlab",
]
dist_exclude_patterns = [
  "/jupyterlab_widgets",
  "/example",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/base"]]
actions = [
  [
    "yarn",
    "build:src",
  ],
]
file_dep = [
  "./packages/base/src/**/*.ts",
]
name = "build"
targets = [
  "./packages/base/tsconfig.tsbuildinfo",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/base-manager"]]
actions = [
  [
    "yarn",
    "build:src",
  ],
]
file_dep = [
  "./packages/base-manager/src/**/*.ts",
  "./packages/controls/tsconfig.tsbuildinfo",
]
name = "build"
targets = [
  "./packages/base-manager/tsconfig.tsbuildinfo",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/controls"]]
actions = [
  [
    "yarn",
    "build:src",
  ],
  [
    "yarn",
    "build:css",
  ],
]
file_dep = [
  "./packages/controls/src/**/*.ts",
  "./packages/base/tsconfig.tsbuildinfo",
  "./packages/controls/css/**/*.less",
]
name = "build"
targets = [
  "./packages/controls/tsconfig.tsbuildinfo",
  { glob_neighbor = [
    "packages/controls/css/*.less",
    "../{stem}.css",
  ] },
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/html-manager"]]
actions = [
  [
    "yarn",
    "build:src",
  ],
]
file_dep = [
  "./packages/html-manager/src/**/*.ts",
  "./packages/base-manager/tsconfig.tsbuildinfo",
]
name = "build"
targets = [
  "./packages/html-manager/tsconfig.tsbuildinfo",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/output"]]
actions = [
  [
    "yarn",
    "build:src",
  ],
]
file_dep = [
  "./packages/output/src/**/*.ts",
  "./packages/html-manager/tsconfig.tsbuildinfo",
]
name = "build"
targets = [
  "./packages/output/tsconfig.tsbuildinfo",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./python/jupyterlab_widgets"]]
actions = [
  [
    "yarn",
    "build:lib",
  ],
]
file_dep = [
  "./packages/base/tsconfig.tsbuildinfo",
  "./packages/controls/tsconfig.tsbuildinfo",
  "./packages/base-manager/tsconfig.tsbuildinfo",
  "./packages/html-manager/tsconfig.tsbuildinfo",
  "./packages/output/tsconfig.tsbuildinfo",
]
name = "build"
targets = [
  "python/jupyterlab_widgets/tsconfig.tsbuildinfo",
  "python/jupyterlab_widgets/lib/index.js",
]

[properties.repos.additionalProperties.anyOf.default.lite]
skip_wheel_patterns = [
  "widgetsnbextension",
]
wheel = true

[properties.repos.additionalProperties.anyOf.default.lite.wheel_file_dep]
jupyterlab_widgets = [
  "python/jupyterlab_widgets/labextension/package.json",
]

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyterlab",
  "ipython",
  "comm",
  "traitlets",
]
pyproject_tomls = [
  "python/ipywidgets/pyproject.toml",
  "python/jupyterlab_widgets/pyproject.toml",
  "python/widgetsnbextension/pyproject.toml",
]

[properties.repos.additionalProperties.anyOf.default.py.lab_extensions."./python/jupyterlab_widgets/"]
file_dep = [
  "packages/*/tsconfig.tsbuildinfo",
  "python/jupyterlab_widgets/lib/index.js",
]
targets = [
  "python/jupyterlab_widgets/labextension/package.json",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyter_client"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "jupyter_client" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_client"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter/jupyter_client"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyter_core",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyter_core"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "jupyter_core" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_core"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter/jupyter_core"

[properties.repos.additionalProperties.anyOf.default.lite]
wheel = true

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "traitlets",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyter_events"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "jupyter_events" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_events"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter/jupyter_events"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "traitlets",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyter_server"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "jupyter_server" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_server"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter-server/jupyter_server"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "nbconvert",
  "traitlets",
  "jupyter_core",
  "jupyter_client",
  "jupyter_events",
  "jupyter_server_terminals",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyter_server_terminals"

[[properties.repos.additionalProperties.anyOf.allOf]]
type = "object"

[properties.repos.additionalProperties.anyOf.allOf.properties.name]
type = "string"
const = "jupyter_server_terminals"

[[properties.repos.additionalProperties.anyOf.allOf]]
"$ref" = "#/$defs/Repo"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_server_terminals"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter-server/jupyter_server_terminals"

[properties.repos.additionalProperties.anyOf.default.py]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyterlab"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "jupyterlab" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlab"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyterlab/jupyterlab"

[properties.repos.additionalProperties.anyOf.default.js]
dependencies = [
  "lumino",
]
dist_exclude_patterns = [
  "/galata",
  "/examples",
  "/dev_mode",
  "/metapackage",
  "/mock",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./"]]
actions = [
  [
    "yarn",
    "build:utils",
  ],
]
file_dep = [
  "buildutils/src/**/*.ts",
  "buildutils/package.json",
]
name = "buildutils"
targets = [
  "buildutils/tsconfig.tsbuildinfo",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./"]]
actions = [
  [
    "yarn",
    "build:builder",
  ],
]
file_dep = [
  "builder/src/**/*.ts",
  "builder/package.json",
]
name = "builder"
targets = [
  "builder/tsconfig.tsbuildinfo",
  "builder/lib/build-labextension.js",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./dev_mode/"]]
actions = [
  [
    "yarn",
    "build:prod",
  ],
]
file_dep = [
  "builder/tsconfig.tsbuildinfo",
  "buildutils/tsconfig.tsbuildinfo",
  "packages/metapackage/tsconfig.tsbuildinfo",
  "packages/*/schema/*.json",
  "packages/*/style/**/*.css",
  "packages/*/style/**/*.svg",
  "packages/*/style/**/*.js",
]
name = "build:prod"
targets = [
  "dev_mode/static/package.json",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/metapackage/"]]
actions = [
  [
    "yarn",
    "build",
  ],
]
file_dep = [
  "../lumino/packages/*/tsconfig.tsbuildinfo",
  "packages/*/src/**/*.ts",
  "packages/*/src/**/*.tsx",
]
name = "build"
targets = [
  "packages/metapackage/tsconfig.tsbuildinfo",
]

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyterlab_server",
  "ipykernel",
  "notebook_shim",
  "jupyter_lsp",
  "jupyterlab_pygments",
]
file_dep = [
  "dev_mode/static/package.json",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyterlab_lsp"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "jupyterlab_lsp" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlab_lsp"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter-lsp/jupyterlab-lsp"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyter_server",
]
setup_cfgs = [
  "python_packages/jupyter_lsp/setup.cfg",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyterlab_pygments"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "jupyterlab_pygments" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlab_pygments"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyterlab/jupyterlab_pygments"

[properties.repos.additionalProperties.anyOf.default.js]
dependencies = [
  "lumino",
  "jupyterlab",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."."]]
actions = [
  [
    "yarn",
    "build:css",
  ],
]
file_dep = [
  "jupyterlab_pygments/style.py",
]
name = "build:css"
targets = [
  "style/base.css",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."."]]
actions = [
  [
    "yarn",
    "build:lib",
    "--skipLibCheck",
  ],
]
file_dep = [
  "src/**/*.ts",
]
name = "build:lib"
targets = [
  "tsconfig.tsbuildinfo",
]

[properties.repos.additionalProperties.anyOf.default.lite]
wheel = true

[properties.repos.additionalProperties.anyOf.default.lite.wheel_file_dep]
jupyterlab_pygments = [
  "jupyterlab_pygments/labextension/package.json",
]

[properties.repos.additionalProperties.anyOf.default.py]
pyproject_tomls = [
  "pyproject.toml",
]

[properties.repos.additionalProperties.anyOf.default.py.lab_extensions."."]
file_dep = [
  "tsconfig.tsbuildinfo",
  "style/base.css",
]
targets = [
  "jupyterlab_pygments/labextension/package.json",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyterlab_server"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "jupyterlab_server" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlab_server"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyterlab/jupyterlab_server"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyter_server",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyterlite"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "jupyterlite" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlite"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyterlite/jupyterlite"

[properties.repos.additionalProperties.anyOf.default.js]
dependencies = [
  "jupyterlab",
  "notebook",
  "lumino",
]
dist_exclude_patterns = [
  "/app",
]
link_exclude_patterns = [
  "^@jupyterlab/(celltags-extension|debugger(-extension)?|extensionmanager(-extension)?|hub-extension|mermaid-extension|nbconvert-css|pluginmanager-extension|terminal(-extension)?|template)$",
  "^@jupyter-notebook/(documentsearch-extension|lab-extension|terminal-extension)$",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./"]]
actions = [
  [
    "doit",
    "build:py:jupyterlite-core:pre:app",
  ],
]
name = "build"
targets = [
  "./py/jupyterlite-javascript-kernel/tsconfig.tsbuildinfo",
  "app/build/third-party-licenses.json",
]

[properties.repos.additionalProperties.anyOf.default.lite]
needs_pth = [
  "jupyterlite_core",
]
wheel = false

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyterlab",
  "notebook",
  "jupyter_server",
  "jupyter_core",
  "traitlets",
]
pyproject_tomls = [
  "./py/jupyterlite/pyproject.toml",
  "./py/jupyterlite-core/pyproject.toml",
  "./py/jupyterlite-javascript-kernel/pyproject.toml",
]

[properties.repos.additionalProperties.anyOf.default.py.lab_extensions."././py/jupyterlite-javascript-kernel"]
file_dep = [
  "./py/jupyterlite-javascript-kernel/tsconfig.tsbuildinfo",
]
targets = [
  "./py/jupyterlite-javascript-kernel/jupyterlite_javascript_kernel/labextension/package.json",
]

[[properties.repos.additionalProperties.anyOf]]
title = "jupyterlite_pyodide_kernel"

[[properties.repos.additionalProperties.anyOf.allOf]]
type = "object"

[properties.repos.additionalProperties.anyOf.allOf.properties.name]
type = "string"
const = "jupyterlite_pyodide_kernel"

[[properties.repos.additionalProperties.anyOf.allOf]]
"$ref" = "#/$defs/Repo"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlite_pyodide_kernel"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyterlite/pyodide-kernel"

[properties.repos.additionalProperties.anyOf.default.js]
dependencies = [
  "lumino",
  "jupyterlab",
  "jupyterlite",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/pyodide-kernel-extension/"]]
actions = [
  [
    "yarn",
    "build:lib",
  ],
]
file_dep = [
  "packages/pyodide-kernel-extension/src/**/*.ts",
  "packages/pyodide-kernel/tsconfig.tsbuildinfo",
]
name = "build:lib"
targets = [
  "packages/pyodide-kernel-extension/tsconfig.tsbuildinfo",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/pyodide-kernel/"]]
actions = [
  [
    "yarn",
    "build:py",
  ],
]
file_dep = [
  "packages/pyodide-kernel/py/**/pyproject.toml",
  "packages/pyodide-kernel/py/**/*.py",
]
name = "build:py:wheels"
needs_pth = [
  "jupyterlite_core",
  "jupyterlite_pyodide_kernel",
]
targets = [
  "packages/pyodide-kernel/pypi/all.json",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/pyodide-kernel/"]]
actions = [
  [
    "yarn",
    "build:prod",
  ],
]
file_dep = [
  "packages/pyodide-kernel/pypi/all.json",
  "packages/pyodide-kernel/src/**/*.ts",
]
name = "build:js"
targets = [
  "packages/pyodide-kernel/tsconfig.tsbuildinfo",
]

[properties.repos.additionalProperties.anyOf.default.lite]
needs_pth = [
  "jupyterlite_pyodide_kernel",
]
wheel = false

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyterlab",
  "jupyterlite",
]
pyproject_tomls = [
  "pyproject.toml",
]

[properties.repos.additionalProperties.anyOf.default.py.lab_extensions."./packages/pyodide-kernel-extension/"]
file_dep = [
  "packages/pyodide-kernel/pypi/all.json",
  "packages/pyodide-kernel-extension/tsconfig.tsbuildinfo",
]
targets = [
  "jupyterlite_pyodide_kernel/labextension/package.json",
]

[[properties.repos.additionalProperties.anyOf]]
title = "lumino"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "lumino" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "lumino"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyterlab/lumino"

[properties.repos.additionalProperties.anyOf.default.js]
dist_exclude_patterns = [
  "/buildutils",
  "/default-theme",
  "/example",
]
install_exclude_resolutions = [
  "@jupyterlab/buildutils",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./"]]
actions = [
  [
    "yarn",
    "build",
  ],
]
file_dep = [
  "packages/*/src/**/*.ts",
  "packages/*/tsconfig.json",
]
name = "build"

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./".targets]]
glob_neighbor = [
  "packages/*/tsconfig.json",
  "../tsconfig.tsbuildinfo",
]

[[properties.repos.additionalProperties.anyOf]]
title = "nbclient"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "nbclient" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "nbclient"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter/nbclient"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyter_core",
  "jupyter_client",
  "nbformat",
  "traitlets",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "nbconvert"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "nbconvert" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "nbconvert"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter/nbconvert"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyter_core",
  "nbformat",
  "nbclient",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "nbformat"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "nbformat" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "nbformat"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter/nbformat"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyter_core",
  "traitlets",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "notebook"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "notebook" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "notebook"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter/notebook"

[properties.repos.additionalProperties.anyOf.default.js]
dependencies = [
  "lumino",
  "jupyterlab",
]
dist_exclude_patterns = [
  "/_metapackage",
  "/app",
  "/buildutils",
]
link_exclude_patterns = [
  "^@jupyterlab/(help-extension|inspector-extension|launcher-extension|logconsole-extension|nbconvert-css|pluginmanager-extension|rendermime-extension|statusbar-extension|template)$",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./app/"]]
actions = [
  [
    "yarn",
    "build:prod",
  ],
]
file_dep = [
  "packages/_metapackage/tsconfig.tsbuildinfo",
  "packages/*/schema/*.json",
  "packages/*/style/**/*.css",
  "packages/*/style/**/*.svg",
  "packages/*/style/**/*.js",
]
name = "app:build:prod"
targets = [
  "notebook/static/bundle.js",
]

[[properties.repos.additionalProperties.anyOf.default.js.tasks."./packages/_metapackage/"]]
actions = [
  [
    "yarn",
    "build",
  ],
]
file_dep = [
  "../lumino/packages/*/tsconfig.tsbuildinfo",
  "../jupyterlab/packages/*/tsconfig.tsbuildinfo",
  "packages/*/src/**/*.ts",
  "packages/*/src/**/*.tsx",
]
name = "meta:build"
targets = [
  "packages/_metapackage/tsconfig.tsbuildinfo",
  "packages/lab-extension/tsconfig.tsbuildinfo",
]

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyterlab",
]
file_dep = [
  "notebook/static/bundle.js",
  "notebook/labextension/static/style.js",
]
pyproject_tomls = [
  "pyproject.toml",
]

[properties.repos.additionalProperties.anyOf.default.py.lab_extensions."./packages/lab-extension/"]
file_dep = [
  "packages/lab-extension/tsconfig.tsbuildinfo",
]
targets = [
  "notebook/labextension/package.json",
  "notebook/labextension/static/style.js",
]

[[properties.repos.additionalProperties.anyOf]]
title = "notebook_shim"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "notebook_shim" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "notebook_shim"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/jupyter/notebook_shim"

[properties.repos.additionalProperties.anyOf.default.py]
dependencies = [
  "jupyter_server",
]
pyproject_tomls = [
  "pyproject.toml",
]

[[properties.repos.additionalProperties.anyOf]]
title = "traitlets"
allOf = [
  { type = "object", properties = { name = { type = "string", const = "traitlets" } } },
  { "$ref" = "#/$defs/Repo" },
]

[properties.repos.additionalProperties.anyOf.default]
name = "traitlets"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
url = "https://github.com/ipython/traitlets"

[properties.repos.additionalProperties.anyOf.default.lite]
wheel = true

[properties.repos.additionalProperties.anyOf.default.py]
pyproject_tomls = [
  "pyproject.toml",
]

["$defs".CondaEnv]
title = "CondaEnv"
description = "A description of the conda environment for doing work."

["$defs".CondaEnv.properties.conda_channels]
type = "array"
title = "conda_channels"
description = "the priority-ordered set of conda URLs of channels to get packages"

["$defs".CondaEnv.properties.conda_channels.items]
type = "string"

["$defs".CondaEnv.properties.conda_dependencies]
type = "array"
title = "conda_dependencies"
description = "the conda-forge-compatible specs for additional packages to install"

["$defs".CondaEnv.properties.conda_dependencies.items]
type = "string"

["$defs".CondaEnv.properties.nodejs_version]
type = "string"
title = "nodejs_version"
description = "the major version of nodejs to install"
pattern = "^(20)$"

["$defs".CondaEnv.properties.pypi_deps]
type = "array"
title = "pypi_deps"
description = "the pypi-compatible specs for additional packages to install"

["$defs".CondaEnv.properties.pypi_deps.items]
type = "string"

["$defs".CondaEnv.properties.pypi_to_conda]
type = "object"
title = "pypi_to_conda"
description = "names of PyPI distributions to replace with their conda-forge counterparts"

["$defs".CondaEnv.properties.python_version]
type = "string"
title = "python_version"
description = "the major version of python 3 to install"
pattern = "^3\\.(8|9|11|10|11|12)$"

["$defs".CondaEnv.properties.variables]
type = "object"
title = "variables"
description = "environment variables to set for all repos when the work environment is created"

["$defs".CondaEnv.properties.variables.additionalProperties]
type = "string"

["$defs".CondaEnv.properties.yarn_version]
type = "string"
title = "yarn_version"
description = "the major version of yarn to install"
pattern = "^3\\.\\d+"

["$defs".CustomTarget]
title = "CustomTarget"
description = "custom file targets"

["$defs".CustomTarget.properties.glob_neighbor]
type = "array"
title = "glob_neighbor"
description = "a file glob and a relative template for an output file"

[["$defs".CustomTarget.properties.glob_neighbor.items]]
type = "string"
description = "a file glob, relative to the repo root"

[["$defs".CustomTarget.properties.glob_neighbor.items]]
type = "string"
description = "a path relative to match: refer to the match stem with {stem}"

["$defs".GitHub]
title = "GitHub"
description = "Information for how to clone the baseline and PRs for this repo"

["$defs".GitHub.properties.baseline]
type = "string"
title = "baseline"
description = "the URL of the baseline HEAD"
pattern = "^(tree/[^s]+|pull/\\d+|releases/tag/[^s]+)$"

["$defs".GitHub.properties.merge_options]
type = "array"
title = "merge_options"
description = "extra options for (and requiring) the ``merge_strategy``"

["$defs".GitHub.properties.merge_options.items]
type = "string"

["$defs".GitHub.properties.merge_strategy]
type = "string"
title = "merge_strategy"
description = "a custom `--strategy` to use during `git merge`"

["$defs".GitHub.properties.merge_with]
type = "array"
title = "merge_with"
description = "an optional, ordered list of branches to merge into the `baseline`"

["$defs".GitHub.properties.merge_with.items]
type = "string"
pattern = "^(tree/[^s]+|pull/\\d+|releases/tag/[^s]+)$"

["$defs".GitHub.properties.url]
type = "string"
title = "url"
description = "the URL of the repo"
pattern = "https://github\\.com/.*"

["$defs".JSOptions]
title = "JSOptions"
description = "JavaScript-related provisioning, building, and linking."

["$defs".JSOptions.properties.dependencies]
type = "array"
title = "dependencies"
description = "the names of other members of `repos` that need to built and linked into this repo in the JS environment"

["$defs".JSOptions.properties.dependencies.items]
type = "string"

["$defs".JSOptions.properties.dist_exclude_patterns]
type = "array"
title = "dist_exclude_patterns"
description = "regular expressions for the paths in this repo that should _not_ be built and linked in other repos"

["$defs".JSOptions.properties.dist_exclude_patterns.items]
type = "string"

["$defs".JSOptions.properties.install_exclude_resolutions]
type = "array"
title = "install_exclude_resolutions"
description = "regular expressions for the npm `@org/pkg` names that should _not_ be installed, ever, in this repo"

["$defs".JSOptions.properties.install_exclude_resolutions.items]
type = "string"

["$defs".JSOptions.properties.link_exclude_patterns]
type = "array"
title = "link_exclude_patterns"
description = "regular expressions for the npm `@org/pkg` names that should _not_ be linked into this repo"

["$defs".JSOptions.properties.link_exclude_patterns.items]
type = "string"

["$defs".JSOptions.properties.tasks]
type = "object"
title = "tasks"
description = "task templates required to fulfill various js needs"

["$defs".JSOptions.properties.tasks.additionalProperties]
type = "array"

["$defs".JSOptions.properties.tasks.additionalProperties.items]
anyOf = [
  { type = "string" },
  { "$ref" = "#/$defs/Task" },
]

["$defs".LabExtension]
title = "LabExtension"
description = "A description of the inputs and outputs of \"jupyter labextension build\""

["$defs".LabExtension.properties.file_dep]
type = "array"
title = "file_dep"
description = "paths or globs to files that would trigger a need to rebuild"

["$defs".LabExtension.properties.file_dep.items]
type = "string"

["$defs".LabExtension.properties.targets]
type = "array"
title = "targets"
description = "canary files that will be generated (usually a package.json)"

["$defs".LabExtension.properties.targets.items]
type = "string"

["$defs".LiteOptions]
title = "LiteOptions"
description = "options for the final jupyterlite build"

["$defs".LiteOptions.properties.gist]
type = "string"
title = "gist"
description = "a gist ID on GitHub to use as JupyterLite contents and config"

["$defs".PythonOptions]
title = "PythonOptions"
description = "Python-related provisioning, building, and linking."

["$defs".PythonOptions.properties.dependencies]
type = "array"
title = "dependencies"
description = "the names of other members of `repos` that need to built and linked into this repo in the Python environment"

["$defs".PythonOptions.properties.dependencies.items]
type = "string"

["$defs".PythonOptions.properties.file_dep]
type = "array"
title = "file_dep"
description = "files needed (usually created by js tasks) before and editable python install"

["$defs".PythonOptions.properties.file_dep.items]
type = "string"

["$defs".PythonOptions.properties.lab_extensions]
type = "object"
title = "lab_extensions"
description = "paths with extra file dependencies needed to build an extension in this repo"

["$defs".PythonOptions.properties.lab_extensions.additionalProperties]
"$ref" = "#/$defs/LabExtension"

["$defs".PythonOptions.properties.modules]
type = "array"
title = "modules"
description = "the importable python names provided by this repo"

["$defs".PythonOptions.properties.modules.items]
type = "string"

["$defs".PythonOptions.properties.pyproject_tomls]
type = "array"
title = "pyproject_tomls"
description = "pyproject.toml files for installable packages"

["$defs".PythonOptions.properties.pyproject_tomls.items]
type = "string"

["$defs".PythonOptions.properties.setup_cfgs]
type = "array"
title = "setup_cfgs"
description = "legacy setup.cfg files for installable packages"

["$defs".PythonOptions.properties.setup_cfgs.items]
type = "string"

["$defs".Repo]
title = "Repo"
description = "A description of a repo."

["$defs".Repo.properties.github]
"$ref" = "#/$defs/GitHub"
title = "github"

["$defs".Repo.properties.js]
"$ref" = "#/$defs/JSOptions"
title = "js"

["$defs".Repo.properties.lite]
"$ref" = "#/$defs/RepoLiteOptions"
title = "lite"

["$defs".Repo.properties.name]
type = "string"
title = "name"
description = "the duplicated name from the parent ``repos`` dictionary used for dependencies"

["$defs".Repo.properties.py]
"$ref" = "#/$defs/PythonOptions"
title = "py"

["$defs".Repo.properties.variables]
type = "object"
title = "variables"
description = "repo-specific environment variables to set when building"

["$defs".Repo.properties.variables.additionalProperties]
type = "string"

["$defs".RepoLiteOptions]
title = "RepoLiteOptions"

["$defs".RepoLiteOptions.properties.needs_pth]
type = "array"
title = "needs_pth"
description = "names of packages this repo provides that need to be installed before a lite site build"

["$defs".RepoLiteOptions.properties.needs_pth.items]
type = "string"

["$defs".RepoLiteOptions.properties.skip_wheel_patterns]
type = "array"
title = "skip_wheel_patterns"
description = "paths to skip building wheels"

["$defs".RepoLiteOptions.properties.skip_wheel_patterns.items]
type = "string"

["$defs".RepoLiteOptions.properties.wheel]
type = "boolean"
title = "wheel"
description = "whether to build and ship a noarch wheel for pyodide"

["$defs".RepoLiteOptions.properties.wheel_file_dep]
type = "object"
title = "wheel_file_dep"
description = "extra files needed to build a given wheel"

["$defs".Task]
title = "Task"
description = "a subset of the doit task definition"

["$defs".Task.properties.actions]
type = "array"
title = "actions"
description = "shell tokens to provide to"

["$defs".Task.properties.actions.items]
type = "array"

["$defs".Task.properties.actions.items.items]
type = "string"

["$defs".Task.properties.file_dep]
type = "array"
title = "file_dep"
description = "relative globs for files that, when changed, trigger a need to run this task"

["$defs".Task.properties.file_dep.items]
type = "string"

["$defs".Task.properties.name]
type = "string"
title = "name"
description = "the name of the task"

["$defs".Task.properties.needs_pth]
type = "array"
title = "needs_pth"
description = "key of a repo that needs to be installed as a python .pth file before running this task"

["$defs".Task.properties.needs_pth.items]
type = "string"

["$defs".Task.properties.targets]
type = "array"
title = "targets"
description = "relative globs for files that, when changed, trigger a need to run this task"

["$defs".Task.properties.targets.items]
anyOf = [
  { type = "string" },
  { "$ref" = "#/$defs/CustomTarget" },
]
